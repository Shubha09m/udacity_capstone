version: 2.1

orbs:
  aws-eks: circleci/aws-eks@1.1.0
  kubernetes: circleci/kubernetes@0.4.0

executors:
  python:
    docker:
      - image: circleci/python:3.7.3-stretch
  aws:
    docker:
      - image: amazon/aws-cli

jobs:
  lint:
    executor: python
    steps:
      - checkout
      - run:
          name: install dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            make install
            sudo wget -O /bin/hadolint https://github.com/hadolint/hadolint/releases/download/v1.16.3/hadolint-Linux-x86_64 &&\
            sudo chmod +x /bin/hadolint
      - run:
          name: run lint
          command: |
            . venv/bin/activate
            make lint
  build:
    machine: true
    working_directory: ~/project

    steps:
      - checkout
      - run:
          name: build and push tag
          command: |
            docker login -u ${DOCKER_USERNAME} -p ${DOCKER_PWD}
            docker build -t dockerbeginnersiva/capstoneproject-${CIRCLE_WORKFLOW_ID} .
            docker push dockerbeginnersiva/capstoneproject-${CIRCLE_WORKFLOW_ID}
            docker tag dockerbeginnersiva/capstoneproject-${CIRCLE_WORKFLOW_ID} dockerbeginnersiva/capstoneproject:latest
            docker push dockerbeginnersiva/capstoneproject:latest
  install-eks:
    machine: true
    steps:
      - checkout
      - run:
          name: Install the eksctl tool
          command: |
            if which eksctl > /dev/null; then
              echo "eksctl is already installed"
              exit 0
            fi
            mkdir -p eksctl_download
            curl --silent --location --retry 5 "https://github.com/weaveworks/eksctl/releases/latest/download/eksctl_$(uname -s)_amd64.tar.gz" \
              | tar xz -C eksctl_download
            chmod +x eksctl_download/eksctl
            SUDO=""
            if [ $(id -u) -ne 0 ] && which sudo > /dev/null ; then
              SUDO="sudo"
            fi
            $SUDO mv eksctl_download/eksctl /usr/local/bin/
            rmdir eksctl_download
  create-deployment:
    executor: aws-eks/python3
    parameters:
      cluster-name:
        description: |
          capstoneproject
        type: string
    steps:
      - checkout
      - kubernetes/install
      - aws-eks/update-kubeconfig-with-authenticator:
          cluster-name: << parameters.cluster-name >>
          install-kubectl: true
      - kubernetes/create-or-update-resource:
          get-rollout-status: true
          resource-file-path: deployment.yaml
          resource-name: deployment/capstoneproject

  test-cluster:
    executor: aws-eks/python3
    parameters:
      cluster-name:
        description: |
          capstoneproject
        type: string
    steps:
      - aws-eks/update-kubeconfig-with-authenticator:
          cluster-name: << parameters.cluster-name >>
      - run:
          name: Test cluster
          command: |
            kubectl get services
            kubectl get svc
            kubectl get nodes -o wide
            kubectl get pods
            kubectl get deployment
workflows:
  deployment:
    jobs:
      - install-eks
      - lint
      - build:
          requires:
            - lint
      - aws-eks/create-cluster:
          cluster-name: capstoneproject
          requires:
            - install-eks
      - create-deployment:
          cluster-name: capstoneproject
          requires:
            - aws-eks/create-cluster
      - test-cluster:
          cluster-name: capstoneproject
          requires:
            - aws-eks/create-cluster
      - aws-eks/delete-cluster:
          cluster-name: capstoneproject
          requires:
            - test-cluster